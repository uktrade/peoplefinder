.grid-row
  .column-full
    %h1.heading-xlarge.with-border-lg
      = @page_title = @person

      .action-links.mobile-hide
        = render partial: "action_links", locals: { person: @person }

    .mobile-show
      = render partial: "action_links", locals: { person: @person }

.grid-row.mod-media.profile
  .column-full
    .media
      .media-left
        = profile_image_tag @person, link: false
        - if @person.email.present? && !@preview
          - if current_user == @person
            = render partial: "completeness", locals: { person: @person }
          - else
            - if @person.incomplete?
              = render partial: "completeness", locals: { person: @person }
        %p.deletion-request-link
          = link_to("Has #{@person.given_name} left the department?", new_person_deletion_request_path(@person))
      .media-body
        %h4.media-heading
        - @person.memberships.group_by(&:group).each do |group, memberships|
          -if memberships.first.role.present?
            %h3.heading-medium.cb-job-title
              #{memberships.map(&:role).select(&:present?).sort.join(', ')}
              %small
                in
                %a{ href: url_for(group) }
                  = group

        - if @person.formatted_buildings.present?
          %dl.inline-labels
            %dt
              Building I work in
            %dd
              = @person.formatted_buildings

        - if @person.location_in_building.present?
          %dl.inline-labels
            %dt
              Locations in building
            %dd
              = @person.location_in_building

        - if @person.city.present?
          %dl.inline-labels
            %dt
              Town, city or region
            %dd
              = @person.city

        - if @person.country_name.present?
          %dl.inline-labels
            %dt
              Country (Market)
            %dd
              = @person.country_name

        - if @person.other_uk.present?
          %dl.inline-labels
            %dt
              Other - UK regional
            %dd
              = @person.other_uk

        - if @person.other_overseas.present?
          %dl.inline-labels
            %dt
              Other - Overseas
            %dd
              = @person.other_overseas

        - if @person.email.present?
          %dl.inline-labels
            %dt
              = t(:email, scope: 'activerecord.attributes.person')
            %dd
              = mail_to(@person.email)

        - if @person.primary_phone_number.present?
          %dl.inline-labels
            %dt
              Mobile number
            %dd
              = call_to_with_country_code(@person.primary_phone_country, @person.primary_phone_number)

        - if @person.secondary_phone_number.present?
          %dl.inline-labels
            %dt
              Landline number
            %dd
              = call_to_with_country_code(@person.secondary_phone_country, @person.secondary_phone_number)

        - if @person.skype_name.present?
          %dl.inline-labels
            %dt
              Skype name
            %dd
              = link_to(@person.skype_name, "skype:#{@person.skype_name}?call")

        - if @person.pronouns.present?
          %dl.inline-labels
            %dt
              Preferred pronouns
            %dd
              = @person.pronouns


        %h4.heading-small
          = "Days worked"

        %ul.working_days
          = render 'working_days'

        - if @person.formatted_key_skills.present?
          %dl.inline-labels#key_skills
            %dt
              Key skills
            %dd
              = @person.formatted_key_skills

        - if @person.language_fluent.present?
          %dl.inline-labels#language_fluent
            %dt
              Fluent Languages
            %dd
              = @person.language_fluent

        - if @person.language_intermediate.present?
          %dl.inline-labels#language_intermediate
            %dt
              Intermediate Languages
            %dd
              = @person.language_intermediate

        - if @person.grade.present?
          %dl.inline-labels#grade
            %dt
              Grade
            %dd
              = I18n.t(@person.grade, scope: 'people.grade_names')

        - if @person.previous_positions.present?
          %dl.inline-labels#previous_positions
            %dt
              Previous positions held
            %dd
              = simple_format(@person.previous_positions)

        - if @person.formatted_learning_and_development.present?
          %dl.inline-labels#learning_and_development
            %dt
              Learning and development interests
            %dd
              = @person.formatted_learning_and_development

        - if @person.formatted_networks.present?
          %dl.inline-labels#networks
            %dt
              Networks I belong to
            %dd
              = @person.formatted_networks

        - if @person.formatted_professions.present?
          %dl.inline-labels#professions
            %dt
              Professions I belong to
            %dd
              = @person.formatted_professions

        - if @person.formatted_additional_responsibilities.present?
          %dl.inline-labels#additional_responsibilities
            %dt
              My additional roles and responsibilities
            %dd
              = @person.formatted_additional_responsibilities

        - if super_admin?
          %hr
          %dl.inline-labels#sso_user_id
            %dt Staff SSO User ID
            %dd= @person.ditsso_user_id

          %dl.inline-labels#sso_user_id
            %dt People Finder Database ID
            %dd= @person.id

          %dl.inline-labels#is_super_admin
            %dt User is super admin?
            %dd= @person.super_admin? ? 'Yes' : 'No'

          %dl.inline-labels#last_login_at
            %dt Last signed in to People Finder
            %dd= @person.last_login_at

          %dl.inline-labels#created_at
            %dt Profile created at
            %dd= @person.created_at

- unless @versions.nil?
  = render 'shared/audit', versions: @versions
