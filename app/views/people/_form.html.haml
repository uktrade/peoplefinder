- @editing_mode = true
= form_for @person, builder: PersonFormBuilder, html: { multipart: true, class: person_form_class(@person, @activity) } do |f|

  = f.text_field :given_name
  = f.text_field :surname
  = f.text_field :pronouns

  %h3.heading-medium.with-border-lg Contact details

  = f.text_field :email

  #mobile-number-fields
    = f.text_field :primary_phone_number
    .form-group.visually-connected
      .panel.panel-border-narrow
        %label.form-label{for: :person_primary_phone_country_code} Country code
        = f.country_select :primary_phone_country_code,
          {format: :with_dialling_code, priority_countries: ["GB"]},
          class: 'form-control'

  #landline-number-fields
    = f.text_field :secondary_phone_number
    .form-group.visually-connected
      .panel.panel-border-narrow
        %label.form-label{for: :person_secondary_phone_country_code} Country code
        = f.country_select :secondary_phone_country_code,
          {format: :with_dialling_code, priority_countries: ["GB"]},
          class: 'form-control'

  = f.text_field :skype_name

  .form-group{class: "#{'error' if @person.errors.include?(:line_manager)}"}
    #error_person_line_manager
    %label.form-label{for: :line_manager}
      My manager (recommended)
      - if @person.errors.include?(:line_manager)
        %span.error-message
          = @person.errors[:line_manager].join(', ')
    - if @person.line_manager
      - opts = raw("<option value=" "></option><option selected='selected' value='#{@person.line_manager.id}'>#{@person.line_manager.name} (#{@person.line_manager.role_and_group})</option>")
    - else
      - opts = raw('<option value=" "></option>')
    = select_tag 'person[line_manager_id]', opts, class: 'js-line-manager-select form-control'

  .form-group
    = f.check_box :line_manager_not_required, 'aria-describedby': 'line_manager_not_required_hint'
    %p
      %span.form-hint#line_manager_not_required_hint
        = t('helpers.hint.person.line_manager_not_required')

  %h3.heading-medium.with-border-lg Location

  = f.text_field :city

  .form-group
    %label.form-label{for: :person_country} Country (Market) (recommended)
    = f.country_select :country,
      {priority_countries: ["GB"]},
      class: 'form-control'

  .form-group.visually-connected-below
    %label.form-label{for: :building} Place(s) I usually work
    %span.form-hint Select all that apply
    %ul.inline-list
      = f.collection_check_boxes :building, building_names,:first, :last,  checked: @person.try(:building) do |b|
        %li
          .form-group
            = b.label(class: "block-label selection-button-checkbox", 'data-value': b.value) { b.check_box + b.text }

  = f.text_field :other_uk
  = f.text_field :other_overseas
  = f.text_field :location_in_building

  .form-group
    #error_person_membership
      #memberships
        %h3.heading-medium.with-border-lg Teams and roles (required)
        = f.fields_for :memberships do |membership_f|
          = render 'membership_fields', membership_f: membership_f, org_structure: @org_structure, person: @person

      = link_to 'Join another team', add_membership_people_path(id: @person.to_param),
        id: 'add_membership', class: 'button-secondary'

  .form-group
    %h3.heading-medium.with-border-lg
      = "Working days"
    %fieldset#working-days
      %legend.form-label-bold.visually-hidden Working days
      %ul.inline-list
        - Person::DAYS_WORKED.each do |day|
          %li
            = f.check_box day

  %h3.heading-medium.with-border-lg
    = "Extra information"

  .form-group#key_skills
    %label.form-label{for: :key_skills} Key skills
    %ul.inline-list
      = f.collection_check_boxes :key_skills, key_skill_names, :first, :last, checked: @person.try(:key_skills) do |b|
        %li
          .form-group
            = b.label(class: "block-label selection-button-checkbox", 'data-value': b.value) { b.check_box + b.text }

  .form-group.visually-connected
    = f.text_field :other_key_skills

  = f.text_field :language_fluent
  = f.text_field :language_intermediate
  = f.collection_select :grade, grade_names, :first, :last, { include_blank: true, hint: false }, class: 'form-control'

  = f.text_area :previous_positions

  .form-group#learning_and_development
    %label.form-label{for: :learning_and_development} Learning and development interests
    %ul.inline-list
      = f.collection_check_boxes :learning_and_development, learning_and_development_names, :first, :last, checked: @person.try(:learning_and_development) do |b|
        %li
          .form-group
            = b.label(class: "block-label selection-button-checkbox", 'data-value': b.value) { b.check_box + b.text }
  .form-group.visually-connected
    = f.text_field :other_learning_and_development

  .form-group#networks
    %label.form-label{for: :networks} Networks I belong to
    %ul.inline-list
      = f.collection_check_boxes :networks, network_names, :first, :last, checked: @person.try(:networks) do |b|
        %li
          .form-group
            = b.label(class: "block-label selection-button-checkbox", 'data-value': b.value) { b.check_box + b.text }

  .form-group#professions
    %label.form-label{for: :professions} Professions I belong to
    %ul.inline-list
      = f.collection_check_boxes :professions, profession_names, :first, :last, checked: @person.try(:professions) do |b|
        %li
          .form-group
            = b.label(class: "block-label selection-button-checkbox", 'data-value': b.value) { b.check_box + b.text }

  .form-group#additional_responsibilities
    %label.form-label{for: :additional_responsibilities} My additional roles and responsibilities
    %ul.inline-list
      = f.collection_check_boxes :additional_responsibilities, additional_responsibility_names, :first, :last, checked: @person.try(:additional_responsibilities) do |b|
        %li
          .form-group
            = b.label(class: "block-label selection-button-checkbox", 'data-value': b.value) { b.check_box + b.text }

  .form-group.visually-connected
    = f.text_field :other_additional_responsibilities

  .form-group.mod-media.card
    = f.label :profile_image, 'Profile photo (recommended)', class: 'form-label'
    .media
      .media-left
        = profile_image_tag @person, link: false
    %br/
    - button_text = f.object.profile_image.present? ? 'Change this photo' : 'Add a photo'
    = f.submit button_text, name: 'edit-picture-button', class: 'button'

  .form-group
    %div.privacy-notice
      = t('views.info_text.privacy_notice').html_safe
    = f.submit 'Save', class: 'button'

  .form-group
    .cancel
      = link_to 'Cancel and go back', @person.new_record? ? :back : @person


- if current_user.role_administrator?
  = form_for @person, builder: PersonFormBuilder, html: { class: person_form_class(@person, @activity) } do |f|
    .form-group
      %h3.heading-medium.with-border-lg Administrative options

      = f.text_field :ditsso_user_id

      %h4.heading-small Permissions

      %fieldset#admin-options
        = f.check_box :role_groups_editor
        = f.check_box :role_people_editor

        %p
          %span.form-hint
            Administrators on People Finder can view global audit trails, reports, and debugging information as well as
            perform all groups and people management functions.
        = f.check_box :role_administrator

      = f.submit 'Update permissions', class: 'button-danger', data: { confirm: "Are you sure you want to update #{@person.name}'s permissions?" }
